/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.management.system.order;

import database.DBConnection;
import java.awt.Color;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class payment extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    String sorderiD = "";
    String formatDateTime =  "";
    public payment() {
        initComponents();
        table_update();
        
        int orderiD = (int)Math.floor(Math.random()*(9999-1000+1)+1000);
        sorderiD =String.valueOf(orderiD);  
        paymentId.setText(sorderiD);
        paymentId.setEditable(false);
        
        LocalDateTime now = LocalDateTime.now();  
        DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");  
        formatDateTime = now.format(format);  
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regUserName = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        payIDSearchId = new javax.swing.JLabel();
        cusName = new javax.swing.JTextField();
        paymentId = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        telephoneNumber = new javax.swing.JLabel();
        cusTel = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        paymentMethod = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        item = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        orderType = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        netPay = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        oneItemPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        regUserName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        regUserName.setMargin(new java.awt.Insets(2, 8, 2, 2));
        regUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regUserNameActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        paymentTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Paid By", "Customer Tel", "Order Type", "Sold Item", "Payment Method", "Qty", "Price For One Item", "Discount", "Total", "Net Payment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentTable.setRowHeight(40);
        paymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(paymentTable);
        if (paymentTable.getColumnModel().getColumnCount() > 0) {
            paymentTable.getColumnModel().getColumn(11).setResizable(false);
        }

        jPanel8.setBackground(new java.awt.Color(255, 255, 204));

        payIDSearchId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        payIDSearchId.setText("ADD NEW PAYMENT");

        cusName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cusName.setMargin(new java.awt.Insets(2, 8, 2, 2));
        cusName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusNameActionPerformed(evt);
            }
        });
        cusName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cusNameKeyPressed(evt);
            }
        });

        paymentId.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        paymentId.setMargin(new java.awt.Insets(2, 8, 2, 2));
        paymentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentIdActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(0, 0, 0));
        save.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Pay");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Payment ID :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Address :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Cus Name :");

        Update.setBackground(new java.awt.Color(0, 153, 153));
        Update.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(51, 0, 153));
        Clear.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(204, 102, 0));
        Back.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        telephoneNumber.setToolTipText("");

        cusTel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cusTel.setMargin(new java.awt.Insets(2, 8, 2, 2));
        cusTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusTelActionPerformed(evt);
            }
        });
        cusTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cusTelKeyPressed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Item :");

        paymentMethod.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cache", "Cheque", "Card" }));
        paymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentMethodActionPerformed(evt);
            }
        });
        paymentMethod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paymentMethodKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymentMethodKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paymentMethodKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Total (RS.):");

        qty.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        qty.setMargin(new java.awt.Insets(2, 8, 2, 2));
        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Pay Method :");

        item.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        item.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Handfree", "Phone", "Bettery", "Phone Charger", "Head Set", "Speaker", "Power Bank", "Chip" }));
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });
        item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Telphone :");

        orderType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fast Ordering", "Normal Ordering" }));
        orderType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderTypeActionPerformed(evt);
            }
        });
        orderType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                orderTypeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderTypeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                orderTypeKeyTyped(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Order Type :");

        netPay.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        netPay.setMargin(new java.awt.Insets(2, 8, 2, 2));
        netPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netPayActionPerformed(evt);
            }
        });
        netPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                netPayKeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Net Pay (RS.) :");

        discount.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        discount.setMargin(new java.awt.Insets(2, 8, 2, 2));
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("Qty :");

        total.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        total.setMargin(new java.awt.Insets(2, 8, 2, 2));
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalKeyPressed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setText("Discount :");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setText("Price Of One Item :");

        oneItemPrice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        oneItemPrice.setMargin(new java.awt.Insets(2, 8, 2, 2));
        oneItemPrice.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                oneItemPriceInputMethodTextChanged(evt);
            }
        });
        oneItemPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneItemPriceActionPerformed(evt);
            }
        });
        oneItemPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                oneItemPriceKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                oneItemPriceKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addComponent(payIDSearchId))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel16)
                            .addComponent(jLabel22))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(Back)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Clear)
                                    .addGap(18, 18, 18)
                                    .addComponent(Update)
                                    .addGap(18, 18, 18)
                                    .addComponent(delete)
                                    .addGap(18, 18, 18)
                                    .addComponent(save))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(netPay))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                            .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(35, 35, 35)
                                            .addComponent(jLabel24)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(oneItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(67, 67, 67)
                                            .addComponent(jLabel23)
                                            .addGap(18, 18, 18)
                                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(telephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(paymentId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                                    .addComponent(cusTel)
                                    .addComponent(cusName))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(orderType, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(48, 48, 48)
                                    .addComponent(jLabel19)
                                    .addGap(18, 18, 18)
                                    .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(133, 133, 133)
                    .addComponent(jLabel11)
                    .addContainerGap(660, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(payIDSearchId)
                .addGap(51, 51, 51)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cusName, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cusTel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telephoneNumber)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(orderType, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(oneItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netPay, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(Clear)
                    .addComponent(Update)
                    .addComponent(delete)
                    .addComponent(save))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(217, 217, 217)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(449, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel7.setText("PAYMENT COLLECTING PAGE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(471, 471, 471))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regUserNameActionPerformed

    private void oneItemPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oneItemPriceKeyPressed
           
    }//GEN-LAST:event_oneItemPriceKeyPressed

    private void oneItemPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneItemPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oneItemPriceActionPerformed

    private void totalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalKeyPressed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyPressed
           
            String quantity = qty.getText();
            String one_ItemPrice = oneItemPrice.getText();

            float fquantity =Float.parseFloat(quantity);
            float fone_ItemPrice =Float.parseFloat(one_ItemPrice);

            String total_price =String.valueOf(fquantity*fone_ItemPrice);  
            total.setText(total_price);    
        
           String discount_price = discount.getText();
           float ftotal_price =Float.parseFloat(total_price);
           float fdiscount_price =Float.parseFloat(discount_price);
           
           String total_netPay = String.valueOf(ftotal_price-fdiscount_price);  
           netPay.setText(total_netPay);
    }//GEN-LAST:event_discountKeyPressed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private void netPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_netPayKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_netPayKeyPressed

    private void netPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netPayActionPerformed

    private void orderTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderTypeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTypeKeyTyped

    private void orderTypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderTypeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTypeKeyReleased

    private void orderTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderTypeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTypeKeyPressed

    private void orderTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTypeActionPerformed

    private void itemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_itemKeyTyped

    private void itemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_itemKeyReleased

    private void itemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemKeyPressed

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemActionPerformed

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyKeyPressed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void paymentMethodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentMethodKeyTyped

    }//GEN-LAST:event_paymentMethodKeyTyped

    private void paymentMethodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentMethodKeyReleased

    }//GEN-LAST:event_paymentMethodKeyReleased

    private void paymentMethodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentMethodKeyPressed

    }//GEN-LAST:event_paymentMethodKeyPressed

    private void paymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentMethodActionPerformed
        
    }//GEN-LAST:event_paymentMethodActionPerformed

    private void cusTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cusTelKeyPressed
        String emp_Tel = cusTel.getText();
        int length = emp_Tel.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length==9){
                telephoneNumber.setText("Valid Telephone Number");
                telephoneNumber.setForeground(Color.black);
            }else{
                telephoneNumber.setText("Invalid Telephone Number");
                telephoneNumber.setForeground(Color.red);
            }
        }else{
            telephoneNumber.setText("Invalid Telephone Number");
            telephoneNumber.setForeground(Color.red);
        }
    }//GEN-LAST:event_cusTelKeyPressed

    private void cusTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusTelActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        dispose();
        Order_Management_Dashboard dashboard = new Order_Management_Dashboard();
        dashboard.setTitle("Admin Dashboard");
        dashboard.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
      
        paymentId.setText("");
        cusName.setText("");
        cusTel.setText("");
        qty.setText("");
        oneItemPrice.setText("");
        discount.setText("");
        total.setText("");
        netPay.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) paymentTable.getModel();
        int selectedIndex = paymentTable.getSelectedRow();

        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());

        try {
            try {
                paymentDelete( id );

                table_update();
            } catch (SQLException ex) {

            }
        } catch (MalformedURLException ex) {

        }
    }//GEN-LAST:event_deleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

        DefaultTableModel model = (DefaultTableModel) paymentTable.getModel();
        int selectedIndex = paymentTable.getSelectedRow();
        int pay_id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());

        String customerName = cusName.getText();
        String customerTel = cusTel.getText();
        String order_Type = orderType.getSelectedItem().toString();
        String sold_item = item.getSelectedItem().toString();
        String pay_method = paymentMethod.getSelectedItem().toString();
        String quantity = qty.getText();
        String one_ItemPrice = oneItemPrice.getText();
        String discount_txt = discount.getText();
        String total_txt = total.getText();
        String netPay_txt = netPay.getText();

        try {
            paymentUpdate(pay_id, customerName, customerTel, order_Type, sold_item ,pay_method , quantity , one_ItemPrice , total_txt, netPay_txt );
            clear();
        } catch (SQLException | MalformedURLException ex) {
            Logger.getLogger(payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        String orderdate = formatDateTime;
        String orderiD = paymentId.getText();
        String customerName = cusName.getText();
        String customerTel = cusTel.getText();
        String order_Type = orderType.getSelectedItem().toString();
        String sold_item = item.getSelectedItem().toString();
        String pay_method = paymentMethod.getSelectedItem().toString();
        String quantity = qty.getText();
        String one_ItemPrice = oneItemPrice.getText();
        String discount_txt = discount.getText();
        String total_txt = total.getText();
        String netPay_txt = netPay.getText();

        if(orderiD.isEmpty()|| orderdate.isEmpty() || customerName.isEmpty()|| customerTel.isEmpty()|| order_Type.isEmpty()|| sold_item.isEmpty()|| pay_method.isEmpty()|| quantity.isEmpty()){

            ImageIcon icon = null;
            try {
                icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
            } catch (MalformedURLException ex) {

            }
            JOptionPane.showMessageDialog(null, "You Must Fill All The Text Feilds", "Login", JOptionPane.INFORMATION_MESSAGE, icon);

        }else{

            try {
                try {
                    paymentAdd( orderiD, orderdate, customerName, customerTel, order_Type, sold_item, pay_method, quantity,one_ItemPrice,discount_txt,total_txt,netPay_txt);
                    clear();

                } catch (SQLException ex) {

                }
            } catch (MalformedURLException ex) {

            }

        }
    }//GEN-LAST:event_saveActionPerformed

    private void paymentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentIdActionPerformed

    private void cusNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cusNameKeyPressed
        payIDSearchId.setText("Add New Order");
    }//GEN-LAST:event_cusNameKeyPressed

    private void cusNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusNameActionPerformed

    private void paymentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) paymentTable.getModel();
        int selectedIndex = paymentTable.getSelectedRow();

        payIDSearchId.setText("    Payment Details (ID : "+model.getValueAt(selectedIndex, 0).toString()+")");
        paymentId.setText(model.getValueAt(selectedIndex, 0).toString());
        cusName.setText(model.getValueAt(selectedIndex, 2).toString());
        cusTel.setText(model.getValueAt(selectedIndex, 3).toString());
        orderType.setSelectedItem(model.getValueAt(selectedIndex, 4).toString());
        item.setSelectedItem(model.getValueAt(selectedIndex, 5).toString());
        paymentMethod.setSelectedItem(model.getValueAt(selectedIndex, 6).toString());
        qty.setText(model.getValueAt(selectedIndex, 7).toString());
        oneItemPrice.setText(model.getValueAt(selectedIndex, 8).toString());
        discount.setText(model.getValueAt(selectedIndex, 9).toString());
        total.setText(model.getValueAt(selectedIndex, 10).toString());
        netPay.setText(model.getValueAt(selectedIndex, 11).toString());
        
     
    }//GEN-LAST:event_paymentTableMouseClicked

    private void oneItemPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oneItemPriceKeyTyped
        
    }//GEN-LAST:event_oneItemPriceKeyTyped

    private void oneItemPriceInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_oneItemPriceInputMethodTextChanged
        
    }//GEN-LAST:event_oneItemPriceInputMethodTextChanged

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cusName;
    private javax.swing.JTextField cusTel;
    private javax.swing.JButton delete;
    private javax.swing.JTextField discount;
    private javax.swing.JComboBox<String> item;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField netPay;
    private javax.swing.JTextField oneItemPrice;
    private javax.swing.JComboBox<String> orderType;
    private javax.swing.JLabel payIDSearchId;
    private javax.swing.JTextField paymentId;
    private javax.swing.JComboBox<String> paymentMethod;
    private javax.swing.JTable paymentTable;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField regUserName;
    private javax.swing.JButton save;
    private javax.swing.JLabel telephoneNumber;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

    private void paymentAdd(String orderiD,String orderdate,String customerName,String customerTel,String order_Type,String sold_item,String pay_method,String quantity,String one_ItemPrice,String discount_txt,String total_txt,String netPay_txt) throws MalformedURLException, SQLException {
         Connection dbconn = DBConnection.connectDB();
        if(dbconn != null){
            PreparedStatement insert = dbconn.prepareStatement("INSERT INTO payment(payID, orderdate, customerName, customerTel, order_Type, sold_item, pay_method, quantity, one_ItemPrice, discount, total, netPay) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");
            insert.setString(1,orderiD);
            insert.setString(2,orderdate);
            insert.setString(3,customerName);
            insert.setString(4,customerTel);
            insert.setString(5,order_Type);   
            insert.setString(6,sold_item);
            insert.setString(7,pay_method);
            insert.setString(8,quantity);
            insert.setString(9,one_ItemPrice);
            insert.setString(10,discount_txt);   
            insert.setString(11,total_txt);
            insert.setString(12,netPay_txt);
            int res = insert.executeUpdate();
             if(res>0){
                  
            
                  final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/oQFQebP.png"));
                  JOptionPane.showMessageDialog(null, "Payment Added", "Payment", JOptionPane.INFORMATION_MESSAGE, icon);
                   
                 
             }else{
                   final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
                   JOptionPane.showMessageDialog(null, "Payment Not Added", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
             }
       }else{
            final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
            JOptionPane.showMessageDialog(null, "Database Connection Error", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
        }
    } 

    private void table_update() {
        Connection dbconn = DBConnection.connectDB();
        int CC;
        try {
            PreparedStatement insert = dbconn.prepareStatement("SELECT * FROM payment");
            ResultSet Rs = insert.executeQuery();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) paymentTable.getModel();
            DFT.setRowCount(0);
 
            while (Rs.next()) {
                Vector v2 = new Vector();
           
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("payID"));
                    v2.add(Rs.getString("orderdate"));
                    v2.add(Rs.getString("customerName"));
                    v2.add(Rs.getString("customerTel"));
                    v2.add(Rs.getString("order_Type"));
                    v2.add(Rs.getString("sold_item"));
                    v2.add(Rs.getString("pay_method"));
                    v2.add(Rs.getString("quantity"));
                    v2.add(Rs.getString("one_ItemPrice"));
                    v2.add(Rs.getString("discount"));
                    v2.add(Rs.getString("total"));
                    v2.add(Rs.getString("netPay"));
                }
                DFT.addRow(v2);
            }
        } catch (Exception e) {
        }
    }

    private void paymentDelete(int id) throws MalformedURLException, SQLException {
         Connection dbconn = DBConnection.connectDB();
        if(dbconn != null){    
            
            String sId=String.valueOf(id); 
            PreparedStatement insert = dbconn.prepareStatement("delete from payment where payID = ?");
            insert.setString(1,sId);
            int res = insert.executeUpdate();
             if(res>0){
                  
            
                  final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/oQFQebP.png"));
                  JOptionPane.showMessageDialog(null, "Payment Delete", "Payment", JOptionPane.INFORMATION_MESSAGE, icon);
                   
                 
             }else{
                   final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
                   JOptionPane.showMessageDialog(null, "Payment Not Delete", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
             }
                     clear();
            
             }else{
            final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
            JOptionPane.showMessageDialog(null, "Database Connection Error", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    private void paymentUpdate(int pay_id,String customerName,String customerTel,String order_Type,String sold_item ,String pay_method ,String  quantity ,String one_ItemPrice ,String total_txt,String netPay_txt ) throws SQLException, MalformedURLException {
        Connection dbconn = DBConnection.connectDB();
        if(dbconn != null){    
            PreparedStatement insert = dbconn.prepareStatement("UPDATE payment set customerName = ?, customerTel = ?  where payID = ?");
            
            String sId=String.valueOf(pay_id); 
            insert.setString(1,customerName);
            insert.setString(2,customerTel);
            insert.setString(3,sId);
            int res = insert.executeUpdate();
             if(res>0){
                  
            
                  final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/oQFQebP.png"));
                  JOptionPane.showMessageDialog(null, "Payment Upadtae", "Payment", JOptionPane.INFORMATION_MESSAGE, icon);
                   
                 
             }else{
                   final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
                   JOptionPane.showMessageDialog(null, "Payment Not Upadtae", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
             }
                    clear();
            
             }else{
            final ImageIcon icon = new ImageIcon(new URL("https://i.imgur.com/KsNOY8M.png"));
            JOptionPane.showMessageDialog(null, "Database Connection Error", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    private void clear() {
        paymentId.setText("");
        cusName.setText("");
        cusTel.setText("");
        qty.setText("");
        oneItemPrice.setText("");
        discount.setText("");
        total.setText("");
        netPay.setText("");
        telephoneNumber.setText("");

        sorderiD =String.valueOf((int)Math.floor(Math.random()*(9999-1000+1)+1000));  
        paymentId.setText(sorderiD);
        paymentId.setEditable(false);
        
        

        table_update(); 
    }
}
